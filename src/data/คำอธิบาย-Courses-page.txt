# คำอธิบาย Courses Page (หน้าคอร์สเรียน)

## โครงสร้างและการทำงานของหน้า Courses Page

หน้า Courses Page เป็นหน้าที่แสดงรายการคอร์สเรียนทั้งหมดของเว็บไซต์ E-learning ซึ่งมีหน้าที่สำคัญในการให้ผู้ใช้งานเลือกและเข้าถึงคอร์สเรียนที่ต้องการ

### โครงสร้างหลักของ Courses Page

1. **ส่วนหัวเว็บ (Header Section)**
   - แสดงชื่อหน้า "คอร์สเรียน"
   - คำอธิบายสั้นๆ เกี่ยวกับการเลือกคอร์ส

2. **ส่วนตัวกรอง (Filters Section)**
   - ตัวกรองตามปีการศึกษา
   - ตัวกรองตามเทอม
   - ตัวกรองตามระดับความยาก
   - ปุ่มล้างตัวกรอง

3. **ส่วนสถิติ (Statistics Section)**
   - แสดงจำนวนวิชาทั้งหมด
   - แสดงจำนวนวิชาระดับเริ่มต้น
   - แสดงจำนวนเครื่องมือที่ใช้

4. **ส่วนแสดงคอร์ส (Courses Grid Section)**
   - แสดงคอร์สเรียนที่จัดกลุ่มตามปีและเทอม
   - แต่ละคอร์สแสดงในรูปแบบการ์ด (Card)
   - มีปุ่ม "เริ่มเรียน" สำหรับแต่ละคอร์ส

### การทำงานของ Courses Page

1. **การโหลดหน้าเว็บ**
   - เมื่อผู้ใช้เข้าสู่หน้า Courses ระบบจะโหลดหน้า [page.tsx](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/app/courses/page.tsx) ในโฟลเดอร์ courses
   - ดึงข้อมูลคอร์สทั้งหมดจาก [curriculum.ts](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/data/curriculum.ts)

2. **การกรองข้อมูล**
   - ผู้ใช้สามารถกรองคอร์สตามปี เทอม และระดับความยากได้
   - ระบบจะกรองข้อมูลแบบเรียลไทม์โดยไม่ต้องโหลดหน้าใหม่
   - มีปุ่มล้างตัวกรองเพื่อกลับไปแสดงคอร์สทั้งหมด

3. **การแสดงผลคอร์ส**
   - คอร์สจะถูกจัดกลุ่มตามปีและเทอมโดยอัตโนมัติ
   - แต่ละคอร์สแสดงในรูปแบบการ์ดพร้อมข้อมูลพื้นฐาน
   - ผู้ใช้สามารถคลิก "เริ่มเรียน" เพื่อไปยังหน้ารายละเอียดคอร์สได้

### การตกแต่งด้วย CSS

1. **การใช้ CSS Variables**
   - ใช้ CSS Variables ในการจัดการสีของธีม เช่น `--background`, `--foreground`, `--primary`
   - รองรับทั้งธีม Light และ Dark

2. **การจัด Layout**
   - ใช้ CSS Grid ในการจัดวางคอร์สในรูปแบบ Grid
   - ใช้ Flexbox ในการจัดวางองค์ประกอบภายในแต่ละส่วน
   - รองรับ Responsive Design สำหรับทุกขนาดหน้าจอ

3. **Effects และ Animation**
   - การ์ดคอร์สมี Animation แบบ Hover
   - มี Transition ในการเปลี่ยนแปลงสถานะขององค์ประกอบ

### เทคโนโลยีที่ใช้

1. **Next.js 15**
   - ใช้ App Router สำหรับการจัดการ Route
   - ใช้ Dynamic Routes สำหรับแต่ละคอร์ส ([id])

2. **React 19**
   - ใช้ Hooks ต่างๆ เช่น useState, useEffect ในการจัดการ State
   - ใช้ Context API สำหรับการจัดการภาษา

3. **CSS3**
   - ใช้ CSS Variables สำหรับ Theme
   - ใช้ Flexbox และ Grid สำหรับ Layout
   - ใช้ Animation และ Transition สำหรับ Effects

### ประโยชน์ของการใช้ TypeScript

1. **Type Safety**
   - ช่วยป้องกันข้อผิดพลาดในการจัดการข้อมูลคอร์ส
   - ทำให้โค้ดอ่านเข้าใจง่ายขึ้น โดยเฉพาะในส่วนของ Interface [CourseContent](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/data/curriculum.ts#L13-L32)

2. **IntelliSense**
   - ช่วยในการพัฒนาด้วยการแนะนำโค้ดอัตโนมัติ
   - ลดเวลาในการพัฒนาและลดข้อผิดพลาด

3. **การบำรุงรักษา**
   - ทำให้โค้ดมีโครงสร้างที่ชัดเจน
   - ง่ายต่อการปรับปรุงและแก้ไขในอนาคต โดยเฉพาะเมื่อมีการเพิ่มคอร์สใหม่