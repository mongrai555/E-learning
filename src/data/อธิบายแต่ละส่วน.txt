คำอธิบายโครงสร้างและฟังก์ชันการทำงานของเว็บไซต์ E-Learning
===================================================================

## โครงสร้างโปรเจกต์ (Project Structure)

โปรเจกต์นี้ใช้ Next.js ซึ่งเป็น Framework สำหรับสร้างเว็บแอปพลิเคชันด้วย React และ TypeScript โดยมีโครงสร้างดังนี้:

```
src/
 ├── app/                    # โฟลเดอร์หลักเก็บหน้าเว็บต่างๆ
 │    ├── layout.tsx         # เลย์เอาต์หลักของเว็บไซต์ (เช่น เมนูนำทาง)
 │    ├── page.tsx           # หน้าแรก (Home page)
 │    ├── admin/             # โฟลเดอร์หน้าผู้ดูแลระบบ
 │    │    └── page.tsx      # หน้าผู้ดูแลระบบ
 │    ├── courses/           # โฟลเดอร์หน้าคอร์สเรียน
 │    │    ├── page.tsx      # หน้าแสดงรายการคอร์สเรียนทั้งหมด
 │    │    └── [id]/page.tsx # หน้ารายละเอียดคอร์สเรียนแต่ละวิชา
 │    ├── login/             # โฟลเดอร์หน้าเข้าสู่ระบบ
 │    │    └── page.tsx      # หน้าเข้าสู่ระบบ
 │    └── globals.css        # ไฟล์ CSS สำหรับกำหนดลักษณะเว็บไซต์ทั้งหมด
 ├── components/             # โฟลเดอร์เก็บส่วนประกอบย่อยๆ ที่ใช้ซ้ำได้
 │    ├── Navbar.tsx         # เมนูนำทางด้านบนเว็บไซต์
 │    ├── CourseCard.tsx     # การ์ดแสดงข้อมูลสั้นของคอร์สเรียน
 │    ├── LanguageSwitch.tsx # ปุ่มสลับภาษา
 │    ├── DarkModeToggle.tsx # ปุ่มสลับโหมดมืด/สว่าง
 │    └── Footer.tsx         # ส่วนท้ายของเว็บไซต์
 ├── contexts/               # โฟลเดอร์เก็บระบบจัดการสถานะของแอปพลิเคชัน
 │    └── LanguageContext.tsx # ระบบจัดการการแปลภาษา
 ├── data/                   # โฟลเดอร์เก็บข้อมูลต่างๆ
 │    └── curriculum.ts      # ข้อมูลหลักสูตรและรายวิชา
 └── styles/                 # โฟลเดอร์เก็บไฟล์ CSS
      └── globals.css        # ไฟล์ CSS สำหรับกำหนดลักษณะเว็บไซต์ทั้งหมด
```

## หน้าเว็บหลัก (Main Pages)

### 1. หน้าแรก (Home Page) - /src/app/page.tsx

**หน้าที่:**
- เป็นหน้าแรกที่ผู้ใช้เห็นเมื่อเข้าเว็บไซต์
- แสดงวิดีโอพื้นหลังพร้อมข้อความแนะนำ
- แสดงคอร์สเรียนแนะนำ (GitHub และ Docker)
- แสดงข้อมูลของประธานหลักสูตร

**ลักษณะการทำงาน:**
- มีวิดีโอเล่นอัตโนมัติเป็นพื้นหลัง
- มีข้อความแนะนำโปรแกรมและทักษะที่จะได้เรียนรู้
- แสดงคอร์สเรียนแนะนำในรูปแบบของการ์ด
- มีปุ่มสลับภาษาและโหมดมืด/สว่าง
- รองรับการเปลี่ยนธีมแบบเรียลไทม์ตามการตั้งค่าของผู้ใช้

### 2. หน้าคอร์สเรียน (Courses Page) - /src/app/courses/page.tsx

**หน้าที่:**
- แสดงรายการคอร์สเรียนทั้งหมดในรูปแบบตารางกริด
- มีระบบกรองข้อมูลตามปีการศึกษา, เทอม, และระดับความยาก
- แสดงสถิติของคอร์สเรียน
- จัดกลุ่มคอร์สเรียนตามปีและเทอม

**ลักษณะการทำงาน:**
- ใช้ Component CourseCard ในการแสดงข้อมูลแต่ละคอร์ส
- มีระบบค้นหาและกรองข้อมูล
- แสดงจำนวนคอร์สเรียนทั้งหมด, คอร์สระดับเริ่มต้น, และเครื่องมือที่ใช้
- เมื่อคลิกที่คอร์สจะไปยังหน้ารายละเอียดของคอร์สนั้น
- รองรับการแปลภาษาแบบเรียลไทม์

### 3. หน้ารายละเอียดคอร์ส (Course Detail Page) - /src/app/courses/[id]/page.tsx

**หน้าที่:**
- แสดงรายละเอียดของคอร์สเรียนแต่ละวิชา
- แสดงข้อมูลครบถ้วนเกี่ยวกับคอร์ส เช่น คำอธิบาย, จุดประสงค์, หัวข้อที่เรียน
- แสดงเครื่องมือที่ใช้ในคอร์สนั้น
- แสดงวิดีโอสอนและบทเรียน

**ลักษณะการทำงาน:**
- ดึงข้อมูลจากไฟล์ curriculum.ts โดยใช้ ID ของคอร์ส
- แสดงข้อมูลในรูปแบบโครงสร้างชัดเจน
- มีปุ่มกลับไปหน้ารายการคอร์สทั้งหมด
- รองรับการแปลภาษาแบบเรียลไทม์
- แสดงเนื้อหารายละเอียดแบบเต็ม รวมถึงคำอธิบาย จุดประสงค์ และหัวข้อที่เรียน

### 4. หน้าผู้ดูแลระบบ (Admin Page) - /src/app/admin/page.tsx

**หน้าที่:**
- สำหรับผู้ดูแลระบบจัดการเว็บไซต์
- แสดง Dashboard สถิติการใช้งาน
- จัดการคอร์สเรียนและผู้ใช้งาน
- ตั้งค่าระบบต่างๆ

**ลักษณะการทำงาน:**
- แสดงข้อมูลสถิติแบบกราฟิก
- มีเมนูจัดการคอร์สเรียน ผู้ใช้งาน และการตั้งค่า
- ใช้ระบบตรวจสอบสิทธิ์เข้าใช้งาน
- แสดงข้อมูลในรูปแบบตารางที่สามารถค้นหาและกรองได้

### 5. หน้าเข้าสู่ระบบ (Login Page) - /src/app/login/page.tsx

**หน้าที่:**
- ให้ผู้ใช้เข้าสู่ระบบเว็บไซต์
- มีช่องกรอกอีเมลและรหัสผ่าน
- มีลิงก์สำหรับลืมรหัสผ่านและสมัครสมาชิก

**ลักษณะการทำงาน:**
- ตรวจสอบข้อมูลการเข้าสู่ระบบ (ในเวอร์ชันนี้เป็นระบบจำลอง)
- แสดงข้อความแจ้งเตือนเมื่อเข้าสู่ระบบสำเร็จหรือไม่สำเร็จ
- เชื่อมโยงกับระบบตรวจสอบสิทธิ์ของเว็บไซต์

## ฟังก์ชันพิเศษ (Special Functions)

### ฟังก์ชันเปลี่ยนภาษา (Language Switching)

**ระบบการทำงาน:**
1. ใช้ Context API ในการจัดการสถานะภาษาทั่วทั้งแอปพลิเคชัน
2. มีไฟล์ LanguageContext.tsx ที่เก็บข้อมูลการแปลภาษาทั้งหมด
3. ปุ่มสลับภาษาอยู่ใน Navbar ด้านขวา
4. เมื่อเปลี่ยนภาษา ข้อความทั้งหมดในเว็บจะเปลี่ยนทันทีโดยไม่ต้องโหลดหน้าใหม่
5. รองรับการแปลเนื้อหาคอร์สเรียนทั้งหมด รวมถึงคำอธิบาย จุดประสงค์ และหัวข้อ

**ลักษณะเฉพาะ:**
- รองรับทั้งภาษาไทยและภาษาอังกฤษ
- ข้อความทั้งหมดในเว็บไซต์สามารถแปลได้
- รวมถึงข้อความในปุ่ม, เมนู, และเนื้อหาคอร์สเรียน
- ข้อมูลคอร์สเรียนแต่ละวิชามีฟิลด์แยกสำหรับภาษาไทยและอังกฤษ

### ฟังก์ชันโหมดมืด/สว่าง (Dark/Light Mode)

**ระบบการทำงาน:**
1. ใช้ CSS Variables ในการจัดการสีของเว็บไซต์
2. มีปุ่มสลับโหมดอยู่ด้านล่างขวาของหน้าจอ
3. ระบบจะจำค่าที่เลือกไว้ใน localStorage
4. เมื่อเปลี่ยนโหมด สีพื้นหลังและข้อความจะเปลี่ยนทันที
5. ปุ่มแสดงเป็นสวิตช์ที่เปลี่ยนรูปตามโหมด (พระอาทิตย์สำหรับโหมดสว่าง, พระจันทร์สำหรับโหมดมืด)

**ลักษณะเฉพาะ:**
- ปุ่มมีลักษณะเป็นสวิตช์ที่แสดงพระอาทิตย์ (สว่าง) และพระจันทร์ (มืด)
- มีเอฟเฟกต์แสงระยิบระยับแบบเรียลไทม์
- สีของทุกองค์ประกอบในเว็บจะเปลี่ยนตามโหมดที่เลือก
- หน้า Home Page ตอบสนองต่อการเปลี่ยนธีมแบบเรียลไทม์

## ข้อมูลหลักสูตร (Curriculum Data)

**ระบบข้อมูล:**
- ข้อมูลทั้งหมดเก็บอยู่ในไฟล์ /src/data/curriculum.ts
- ใช้ TypeScript Interface เพื่อกำหนดโครงสร้างข้อมูล
- แต่ละคอร์สมีข้อมูลครบถ้วน เช่น ชื่อวิชา, คำอธิบาย, จุดประสงค์, หัวข้อ, เครื่องมือที่ใช้
- รองรับการแปลภาษาแบบแยกฟิลด์ (มีทั้งภาษาไทยและอังกฤษ)

**ลักษณะข้อมูล:**
- แบ่งตามปีการศึกษาและเทอม
- มีระดับความยากของแต่ละวิชา
- มีรูปภาพประกอบแต่ละวิชา
- มีวิดีโอตัวอย่างประกอบการเรียน
- ข้อมูลแต่ละคอร์สประกอบด้วย:
  - คำอธิบายแบบเต็ม (Full Description)
  - จุดประสงค์การเรียนรู้ (Learning Objectives)
  - หัวข้อที่เรียน (Topics Covered)
  - เครื่องมือที่ใช้ (Tools Used)

## เทคโนโลยีที่ใช้ (Technologies Used)

1. **Next.js** - Framework สำหรับสร้างเว็บแอปพลิเคชัน React
2. **TypeScript** - ภาษาโปรแกรมที่มีระบบตรวจสอบประเภท (Type Checking)
3. **CSS** - สำหรับจัดรูปแบบการแสดงผลของเว็บไซต์
4. **React Context API** - สำหรับจัดการสถานะของแอปพลิเคชัน
5. **React Hooks** - สำหรับจัดการสถานะและการทำงานของ Component

## ความเหมาะสมกับผู้เรียน (Suitability for Learners)

เว็บไซต์นี้ออกแบบมาเพื่อให้เหมาะสมกับนักศึกษาสาขาวิทยาการคอมพิวเตอร์ โดยมีลักษณะ:

1. **ใช้งานง่าย** - เมนูชัดเจน แบ่งส่วนงานชัดเจน
2. **รองรับหลายภาษา** - สามารถเปลี่ยนภาษาได้ตามความสะดวก
3. **ปรับโหมดการใช้งาน** - สามารถใช้ในที่มืดหรือสว่างได้
4. **เนื้อหาครบถ้วน** - มีข้อมูลทุกคอร์สเรียนอย่างละเอียด
5. **เข้าถึงได้ง่าย** - สามารถเข้าใช้งานได้จากทุกอุปกรณ์