# คำอธิบายแต่ละ Courses (รายละเอียดคอร์สเรียน)

## โครงสร้างและการทำงานของแต่ละ Courses Page

หน้ารายละเอียดคอร์สแต่ละคอร์สเป็นหน้าที่แสดงข้อมูลโดยละเอียดเกี่ยวกับคอร์สเรียนนั้นๆ ซึ่งมีหน้าที่สำคัญในการให้ข้อมูลครบถ้วนแก่ผู้เรียนก่อนเข้าสู่กระบวนการเรียนรู้

### โครงสร้างหลักของแต่ละ Courses Page

1. **ส่วนนำทาง (Breadcrumb)**
   - แสดงเส้นทางการนำทางเพื่อกลับไปยังหน้าคอร์สทั้งหมด
   - ช่วยให้ผู้ใช้งานไม่หลงทางในเว็บไซต์

2. **ส่วนหัวคอร์ส (Course Header)**
   - แสดงชื่อคอร์สในภาษาไทยและอังกฤษ
   - แสดงป้ายข้อมูล เช่น ปีการศึกษา เทอม ระดับความยาก
   - แสดงหน่วยกิตและระยะเวลาของคอร์ส
   - ปุ่ม "เริ่มเรียน" เพื่อเข้าสู่เนื้อหาคอร์ส

3. **ส่วนคำอธิบายรายวิชา (Course Description)**
   - แสดงคำอธิบายรายละเอียดของคอร์สอย่างครบถ้วน
   - ช่วยให้ผู้เรียนเข้าใจวัตถุประสงค์ของคอร์ส

4. **ส่วนจุดประสงค์การเรียนรู้ (Learning Objectives)**
   - แสดงจุดประสงค์ที่ผู้เรียนจะได้รับจากคอร์ส
   - จัดรูปแบบเป็นรายการเพื่อความชัดเจน

5. **ส่วนหัวข้อที่เรียน (Course Topics)**
   - แสดงหัวข้อที่จะเรียนในคอร์สนี้
   - จัดรูปแบบเป็นรายการเพื่อความชัดเจน

6. **ส่วนวิชาที่ต้องเรียนก่อน (Prerequisites)**
   - แสดงวิชาที่ควรเรียนก่อนเข้าคอร์สนี้
   - ช่วยให้ผู้เรียนเตรียมความพร้อมได้

7. **ส่วนเครื่องมือที่ใช้ (Tools Used)**
   - แสดงเครื่องมือที่จะใช้ในคอร์สนี้
   - ช่วยให้ผู้เรียนเตรียมความพร้อมได้

8. **ส่วนเนื้อหาคอร์ส (Course Content - Sidebar)**
   - แสดงเนื้อหาคอร์สในรูปแบบพาร์ทต่างๆ
   - แสดงความคืบหน้าของการเรียน

### การทำงานของแต่ละ Courses Page

1. **การโหลดหน้าเว็บ**
   - เมื่อผู้ใช้คลิกที่คอร์สใดคอร์สหนึ่งในหน้า Courses ระบบจะนำทางไปยังหน้า [page.tsx](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/app/courses/%5Bid%5D/page.tsx) ในโฟลเดอร์ [courses/[id]](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/app/courses/%5Bid%5D)
   - ระบบจะดึงข้อมูลคอร์สตาม id ที่ระบุใน URL

2. **การแสดงข้อมูล**
   - ดึงข้อมูลคอร์สจาก [curriculum.ts](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/data/curriculum.ts) ตาม id ที่ระบุ
   - แสดงข้อมูลทั้งหมดของคอร์สนั้นๆ ตามโครงสร้างที่กำหนด

3. **การจัดการภาษา**
   - ใช้ [LanguageContext.tsx](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/contexts/LanguageContext.tsx) ในการจัดการการแปลภาษา
   - ข้อความทั้งหมดจะเปลี่ยนภาษาตามการตั้งค่าของผู้ใช้

4. **การนำทางไปยังวิดีโอ**
   - ปุ่ม "เริ่มเรียน" จะนำทางไปยังหน้าวิดีโอของคอร์สนั้นๆ

### การตกแต่งด้วย CSS

1. **การใช้ CSS Variables**
   - ใช้ CSS Variables ในการจัดการสีของธีม เช่น `--background`, `--foreground`, `--primary`
   - รองรับทั้งธีม Light และ Dark

2. **การจัด Layout**
   - ใช้ CSS Grid ในการจัดวาง Layout หลักเป็น 2 คอลัมน์
   - ใช้ Flexbox ในการจัดวางองค์ประกอบภายในแต่ละส่วน
   - รองรับ Responsive Design สำหรับทุกขนาดหน้าจอ

3. **Effects และ Animation**
   - การ์ดและองค์ประกอบต่างๆ มี Animation แบบ Hover
   - มี Transition ในการเปลี่ยนแปลงสถานะขององค์ประกอบ

### เทคโนโลยีที่ใช้

1. **Next.js 15**
   - ใช้ Dynamic Routes สำหรับแต่ละคอร์ส ([id])
   - ใช้ App Router สำหรับการจัดการ Route
   - ใช้ Link Component สำหรับการนำทางภายใน

2. **React 19**
   - ใช้ Hooks ต่างๆ เช่น useState ในการจัดการ State
   - ใช้ Context API สำหรับการจัดการภาษา

3. **CSS3**
   - ใช้ CSS Variables สำหรับ Theme
   - ใช้ Flexbox และ Grid สำหรับ Layout
   - ใช้ Animation และ Transition สำหรับ Effects

### ประโยชน์ของการใช้ TypeScript

1. **Type Safety**
   - ช่วยป้องกันข้อผิดพลาดในการจัดการข้อมูลคอร์ส
   - ทำให้โค้ดอ่านเข้าใจง่ายขึ้น โดยเฉพาะในส่วนของ Interface [CourseContent](file:///c:/Users/Earth/Desktop/CSMJU_Elearning/csmju-learning/src/data/curriculum.ts#L13-L32)

2. **IntelliSense**
   - ช่วยในการพัฒนาด้วยการแนะนำโค้ดอัตโนมัติ
   - ลดเวลาในการพัฒนาและลดข้อผิดพลาด

3. **การบำรุงรักษา**
   - ทำให้โค้ดมีโครงสร้างที่ชัดเจน
   - ง่ายต่อการปรับปรุงและแก้ไขในอนาคต โดยเฉพาะเมื่อมีการเพิ่มคอร์สใหม่